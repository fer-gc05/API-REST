{
    "openapi": "3.0.0",
    "info": {
        "title": "Fire Prevention API",
        "description": "API documentation with JWT authentication",
        "version": "1.0.0"
    },
    "paths": {
        "/api/alerts": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Get all alerts",
                "description": "Returns a list of all alerts with their associated device information",
                "operationId": "6ac30b403570528057748370e2ecd252",
                "responses": {
                    "200": {
                        "description": "List of alerts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AlertResponse"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No alerts found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No alerts found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Create a new alert",
                "description": "Creates a new alert with the provided information",
                "operationId": "583ead7de5a61ba68a245e8d45325f4b",
                "requestBody": {
                    "description": "Alert creation data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "device_token",
                                    "type",
                                    "value",
                                    "max_value"
                                ],
                                "properties": {
                                    "device_token": {
                                        "description": "Token of the device",
                                        "type": "string",
                                        "example": "abc123"
                                    },
                                    "type": {
                                        "description": "Type of the alert",
                                        "type": "string",
                                        "enum": [
                                            "Temperatura",
                                            "Humedad",
                                            "Nivel de humo",
                                            "Nivel de gas"
                                        ],
                                        "example": "Temperatura"
                                    },
                                    "value": {
                                        "description": "Current value",
                                        "type": "number",
                                        "format": "float",
                                        "example": 45.5
                                    },
                                    "max_value": {
                                        "description": "Maximum allowed value",
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Alert created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Alert created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "device_token": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The device token is required"
                                            ]
                                        },
                                        "type": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The type must be one of: Temperatura, Humedad, Nivel de humo, Nivel de gas"
                                            ]
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The value must be a number"
                                            ]
                                        },
                                        "max_value": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The max value must be a number"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/alerts/{id}": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Get a single alert",
                "description": "Returns detailed information about a specific alert",
                "operationId": "e738888eb649a04431b976cdb22be3fb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the alert to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alert details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Alert not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Alert not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Update an alert",
                "description": "Updates an existing alert with the provided information",
                "operationId": "5608d1492b83b9178f013e72e3468c48",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the alert to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Alert update data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "value",
                                    "max_value"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "Type of the alert",
                                        "type": "string",
                                        "enum": [
                                            "Temperatura",
                                            "Humedad",
                                            "Nivel de humo",
                                            "Nivel de gas"
                                        ],
                                        "example": "Humedad"
                                    },
                                    "value": {
                                        "description": "Current value",
                                        "type": "number",
                                        "format": "float",
                                        "example": 60
                                    },
                                    "max_value": {
                                        "description": "Maximum allowed value",
                                        "type": "number",
                                        "format": "float",
                                        "example": 70
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Alert updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Alert updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Alert not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Alert not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "type": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The type must be one of: Temperatura, Humedad, Nivel de humo, Nivel de gas"
                                            ]
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The value must be a number"
                                            ]
                                        },
                                        "max_value": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The max value must be a number"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Delete an alert",
                "description": "Deletes an existing alert",
                "operationId": "acacb2da7ac666316db28483ddf92e6a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the alert to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alert deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Alert deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Alert not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Alert not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user account with the provided information",
                "operationId": "d764dd091cc4494ae0baf360b03319f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "role",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "user"
                                        ],
                                        "example": "user"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The name field is required"
                                            ]
                                        },
                                        "email": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The email must be a valid email address"
                                            ]
                                        },
                                        "password": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The password must be at least 8 characters"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticates a user and returns a JWT token",
                "operationId": "8dcb70df1020986038d098cc08d05dae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The email field is required"
                                            ]
                                        },
                                        "password": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The password field is required"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "description": "Returns the currently authenticated user's information",
                "operationId": "b3c2811c57c1ffa70c76a938f23f36a6",
                "responses": {
                    "200": {
                        "description": "User data returned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Invalidates the current JWT token",
                "operationId": "69281b12abb272c76871f19cb17ca563",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/devices": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Get all devices",
                "description": "Returns a list of all registered devices",
                "operationId": "d3978c2fbd1796da59a3cf3576e55df4",
                "responses": {
                    "200": {
                        "description": "List of devices retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DeviceResponse"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No devices found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No devices found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Devices"
                ],
                "summary": "Create a new device",
                "description": "Creates a new device with the provided information and generates a unique token",
                "operationId": "4f947fbe016f1c35e9a6ad86cc74885a",
                "requestBody": {
                    "description": "Device creation data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "location"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the device (min: 10, max: 100 characters)",
                                        "type": "string",
                                        "example": "Sensor Temperatura Cocina"
                                    },
                                    "location": {
                                        "description": "Location of the device (min: 10, max: 100 characters)",
                                        "type": "string",
                                        "example": "Cocina Principal"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Device created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The name must be at least 10 characters"
                                            ]
                                        },
                                        "location": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The location must be at least 10 characters"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/devices/{id}": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Get a single device",
                "description": "Returns detailed information about a specific device",
                "operationId": "17ad13acb1600bf31cd958047e432d22",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the device to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Device not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Devices"
                ],
                "summary": "Update a device",
                "description": "Updates an existing device with the provided information",
                "operationId": "e1fb9e989e7a45c0c9c826c63f32e2f4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the device to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Device update data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "location"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Sensor Temperatura Sala"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Sala Principal"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Device updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Device not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Devices"
                ],
                "summary": "Delete a device",
                "description": "Deletes an existing device",
                "operationId": "12ef76711eba12287d34f2f016a91877",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the device to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Device not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/devices/activate/{token}": {
            "post": {
                "tags": [
                    "Devices"
                ],
                "summary": "Activate a device",
                "description": "Activates a device using its unique token",
                "operationId": "13229d2ea781e7d37b9bd20c6061387b",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Token of the device to activate",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device activated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device activated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Device not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/devices/deactivate/{token}": {
            "post": {
                "tags": [
                    "Devices"
                ],
                "summary": "Deactivate a device",
                "description": "Deactivates a device using its unique token",
                "operationId": "d3592a42411be1721d20eb738ee5e836",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Token of the device to deactivate",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device deactivated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device deactivated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Device not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/devices/status/{token}": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Get device status by token",
                "description": "Returns the status of a device using its unique token",
                "operationId": "e0d6e24871c1da463744f51ddb85b2d9",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Token of the device to check",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "Activo",
                                                "Inactivo"
                                            ],
                                            "example": "Activo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Device not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/readings": {
            "get": {
                "tags": [
                    "Sensor Readings"
                ],
                "summary": "Get all sensor readings",
                "description": "Returns a list of all sensor readings with their associated device information",
                "operationId": "e06a175f29cd83ec2d2dd23c0d1faa89",
                "responses": {
                    "200": {
                        "description": "List of sensor readings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SensorReadingResponse"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No sensor readings found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No sensor readings found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Sensor Readings"
                ],
                "summary": "Create a new sensor reading",
                "description": "Creates a new sensor reading with the provided measurements",
                "operationId": "98de13709ed8eb63c07d1d828935d8a5",
                "requestBody": {
                    "description": "Sensor reading data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "device_token",
                                    "temperature",
                                    "humidity",
                                    "smoke_level",
                                    "gas_level"
                                ],
                                "properties": {
                                    "device_token": {
                                        "description": "Token of the device making the reading",
                                        "type": "string",
                                        "example": "abc123"
                                    },
                                    "temperature": {
                                        "description": "Temperature reading in Celsius",
                                        "type": "number",
                                        "format": "float",
                                        "example": 25.5
                                    },
                                    "humidity": {
                                        "description": "Humidity percentage",
                                        "type": "number",
                                        "format": "float",
                                        "example": 60
                                    },
                                    "smoke_level": {
                                        "description": "Smoke level reading",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    },
                                    "gas_level": {
                                        "description": "Gas level reading",
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sensor reading created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sensor reading created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "device_token": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The device token is required"
                                            ]
                                        },
                                        "temperature": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The temperature must be a number"
                                            ]
                                        },
                                        "humidity": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The humidity must be a number"
                                            ]
                                        },
                                        "smoke_level": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The smoke level must be a number"
                                            ]
                                        },
                                        "gas_level": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The gas level must be a number"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/readings/{id}": {
            "get": {
                "tags": [
                    "Sensor Readings"
                ],
                "summary": "Get a single sensor reading",
                "description": "Returns detailed information about a specific sensor reading",
                "operationId": "050b11ce32b0bff4522c31388f187eed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the sensor reading to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sensor reading details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SensorReadingResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sensor reading not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sensor reading not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Sensor Readings"
                ],
                "summary": "Update a sensor reading",
                "description": "Updates an existing sensor reading with new measurements",
                "operationId": "2f71f399d8046e68de2b6de419e8f7af",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the sensor reading to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated sensor reading data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "temperature",
                                    "humidity",
                                    "smoke_level",
                                    "gas_level"
                                ],
                                "properties": {
                                    "temperature": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 26.5
                                    },
                                    "humidity": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 65
                                    },
                                    "smoke_level": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 12
                                    },
                                    "gas_level": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 18
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sensor reading updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sensor reading updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sensor reading not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sensor reading not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "temperature": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "humidity": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "smoke_level": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "gas_level": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Sensor Readings"
                ],
                "summary": "Delete a sensor reading",
                "description": "Deletes an existing sensor reading",
                "operationId": "4cf132572b8df8b849fc89bab9467172",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the sensor reading to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sensor reading deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sensor reading deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sensor reading not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sensor reading not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AlertResponse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "device_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "Temperatura",
                            "Humedad",
                            "Nivel de humo",
                            "Nivel de gas"
                        ],
                        "example": "Temperatura"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 45.5
                    },
                    "max_value": {
                        "type": "number",
                        "format": "float",
                        "example": 50
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-29T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-29T12:00:00Z"
                    },
                    "device": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Sensor Cocina"
                            },
                            "location": {
                                "type": "string",
                                "example": "Cocina Principal"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UserResponse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "user"
                        ],
                        "example": "user"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-29T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-29T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "DeviceResponse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Sensor Temperatura Cocina"
                    },
                    "location": {
                        "type": "string",
                        "example": "Cocina Principal"
                    },
                    "token": {
                        "type": "string",
                        "example": "a1b2c3d4e5f6g7h8i9j0"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Activo",
                            "Inactivo"
                        ],
                        "example": "Activo"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-29T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-29T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "SensorReadingResponse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "device_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "temperature": {
                        "type": "number",
                        "format": "float",
                        "example": 25.5
                    },
                    "humidity": {
                        "type": "number",
                        "format": "float",
                        "example": 60
                    },
                    "smoke_level": {
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "gas_level": {
                        "type": "number",
                        "format": "float",
                        "example": 15
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-29T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-29T12:00:00Z"
                    },
                    "device": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Sensor Cocina"
                            },
                            "location": {
                                "type": "string",
                                "example": "Cocina Principal"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Alerts",
            "description": "API Endpoints for managing alerts from devices"
        },
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication"
        },
        {
            "name": "Devices",
            "description": "API Endpoints for managing IoT devices"
        },
        {
            "name": "Sensor Readings",
            "description": "API Endpoints for managing sensor readings from IoT devices"
        }
    ]
}